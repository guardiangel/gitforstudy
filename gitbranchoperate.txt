1、创建一个分支，这会在当前所在的提交对象上创建一个指针
G:\gitforstudy>git branch testing

    Git 又是怎么知道当前在哪一个分支上呢？ 也很简单，它有一个名为 HEAD 的特殊指针。 请注意它和许多其它版本控制系统（如 Subversion 或 CVS）里的 HEAD 概念完全不同。 在 Git
中，它是一个指针，指向当前所在的本地分支（译注：将 HEAD 想象为当前分支的别名）。在本例中，你仍然在master 分支上。 因为 git branch 命令仅仅 创建 一个新分支，并不会自动切换到新分支中去

2.使用 git log 命令查看各个分支当前所指的对象。 提供这一功能的参数是 --decorate
    G:\gitforstudy>git log --oneline --decorate
5c42ec5 (HEAD -> main, origin/main, testing) <E9><87>.....

3.切换分支
    G:\gitforstudy>git checkout testing
    Switched to branch 'testing'

4.创建分支同时切换 git checkout -b <new branch name>
    G:\gitforstudy>git checkout -b testingtwo
    Switched to a new branch 'testingtwo'

5.切换分支到testing，修改文件indtx.html，再切换回来main，然后合并testing修改的文件到main
	5.1 G:\gitforstudy>git checkout testing
		Switched to branch 'testing'
	5.2 G:\gitforstudy>git add src/main/resources/index.html

	5.3 G:\gitforstudy>git status
		On branch testing
		Changes to be committed:
		  (use "git restore --staged <file>..." to unstage)
				new file:   src/main/resources/index.html

	5.4 G:\gitforstudy>git commit  src/main/resources/index.html -m "for switch test"
		[testing f473e76] for switch test
		 1 file changed, 10 insertions(+)
		 create mode 100644 src/main/resources/index.html

	5.5 G:\gitforstudy>git status
		On branch testing
		nothing to commit, working tree clean

	5.6 G:\gitforstudy>git checkout main
		Switched to branch 'main'
		Your branch is ahead of 'origin/main' by 1 commit.
		  (use "git push" to publish your local commits)
	5.7 G:\gitforstudy>git merge testing
		Auto-merging gitbranchoperate.txt
		Merge made by the 'recursive' strategy.
		 src/main/resources/index.html | 10 ++++++++++
		 1 file changed, 10 insertions(+)
		 create mode 100644 src/main/resources/index.html

6.查看所有分支及当前所在分支,结果中带*号的，表示为当前分支
	G:\gitforstudy>git branch
	* main
	  testing
	  testingtwo
7.删除分支
	G:\gitforstudy>git branch -d testingtwo
	Deleted branch testingtwo (was 9f026b9).

	G:\gitforstudy>git branch
	* main
	  testing
